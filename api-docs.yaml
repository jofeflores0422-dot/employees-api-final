openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /employees/{id}:
    get:
      tags:
      - employees-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeResponseDTO'
    put:
      tags:
      - employees-controller
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeResponseDTO'
    delete:
      tags:
      - employees-controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
      - employees-controller
      operationId: patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePatchDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeResponseDTO'
  /employees:
    get:
      tags:
      - employees-controller
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeResponseDTO'
    post:
      tags:
      - employees-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeResponseDTO'
  /employees/search:
    get:
      tags:
      - employees-controller
      operationId: search
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeResponseDTO'
components:
  schemas:
    EmployeeRequestDTO:
      required:
      - age
      - birthDate
      - firstName
      - gender
      - lastName
      - position
      - secondLastName
      type: object
      properties:
        firstName:
          maxLength: 60
          minLength: 0
          type: string
        middleName:
          maxLength: 60
          minLength: 0
          type: string
        lastName:
          maxLength: 80
          minLength: 0
          type: string
        secondLastName:
          maxLength: 80
          minLength: 0
          type: string
        age:
          maximum: 120
          minimum: 0
          type: integer
          format: int32
        gender:
          type: string
          enum:
          - M
          - F
          - O
        birthDate:
          type: string
          format: date
        position:
          maxLength: 120
          minLength: 0
          type: string
        active:
          type: boolean
    EmployeeResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        secondLastName:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
          enum:
          - M
          - F
          - O
        birthDate:
          type: string
          format: date
        position:
          type: string
        createdAt:
          type: string
          format: date-time
        active:
          type: boolean
    EmployeePatchDTO:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        secondLastName:
          type: string
        age:
          maximum: 120
          minimum: 0
          type: integer
          format: int32
        gender:
          pattern: "(?i)^[MFO]$"
          type: string
          enum:
          - M
          - F
          - O
        birthDate:
          type: string
          format: date
        position:
          type: string
        active:
          type: boolean
